-- Tabela typeCharade
CREATE TABLE typeCharade (
    typeCharadeID INT PRIMARY KEY,
    type VARCHAR(50) NOT NULL
);

-- Tabela charade
CREATE TABLE charade (
    charadeID INT PRIMARY KEY,
    typeCharadeID INT NOT NULL,
    difficulty VARCHAR(10) NOT NULL CHECK (difficulty IN ('easy', 'medium', 'hard')),
    origin VARCHAR(50),
    description VARCHAR(255) NOT NULL,
    answer VARCHAR(50) NOT NULL,
    FOREIGN KEY (typeCharadeID) REFERENCES typeCharade(typeCharadeID)
);

-- Tabela multipleChoice
CREATE TABLE multipleChoice (
    multipleChoiceID INT PRIMARY KEY,
    charadeID INT NOT NULL,
    optionText VARCHAR(50) NOT NULL,
    isCorrect BOOLEAN NOT NULL,
    FOREIGN KEY (charadeID) REFERENCES charade(charadeID)
    -- Aqui removemos a coluna typeCharadeID e a restrição CHECK, recomendando outra forma de validação
);

-- Tabela tag (sem mudanças)
CREATE TABLE tag (
    tagID INT PRIMARY KEY,
    tagName VARCHAR(50) NOT NULL CHECK(tagName IN ('movie', 'funny', 'logic', 'science', 'classic'))
);

-- Tabela charadeTag (sem mudanças)
CREATE TABLE charadeTag (
    charadeTagID INT PRIMARY KEY,
    charadeID INT NOT NULL,
    tagID INT NOT NULL,
    FOREIGN KEY (charadeID) REFERENCES charade(charadeID),
    FOREIGN KEY (tagID) REFERENCES tag(tagID)
);


------------------------

-- Tabela charade ajustada
CREATE TABLE charade (
    charadeID INT PRIMARY KEY,
    charadeType VARCHAR(1) NOT NULL CHECK (charadeType IN ('m', 's')), -- 'm' para múltipla escolha, 's' para discursiva
    difficulty VARCHAR(10) NOT NULL CHECK (difficulty IN ('easy', 'medium', 'hard')),
    origin VARCHAR(50),
    description VARCHAR(255) NOT NULL,
    answer VARCHAR(50) NOT NULL
);

-- Tabela multipleChoice ajustada
CREATE TABLE multipleChoice (
    multipleChoiceID INT PRIMARY KEY,
    charadeID INT NOT NULL,
    optionText VARCHAR(50) NOT NULL,
    isCorrect BOOLEAN NOT NULL,
    FOREIGN KEY (charadeID) REFERENCES charade(charadeID) -- Mantém a referência ao charadeID
    -- Removemos o typeCharadeID e a restrição CHECK, controlaremos pelo TRIGGER
);

-----------

DELIMITER $$

CREATE TRIGGER BeforeInsertMultipleChoice
BEFORE INSERT ON multipleChoice
FOR EACH ROW
BEGIN
    DECLARE v_charadeType CHAR(1);
    SELECT charadeType INTO v_charadeType FROM charade WHERE charadeID = NEW.charadeID;
    IF v_charadeType <> 'm' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Inserção inválida: apenas charadas do tipo múltipla escolha podem ter opções de múltipla escolha.';
    END IF;
END$$

DELIMITER ;